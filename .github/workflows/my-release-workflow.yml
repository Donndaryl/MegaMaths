name: My Release Workflow

on:
  push:
    tags:
      - '*'
jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ 3.10.6, 3.10.6, 3.10.6 ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install poetry
        run: pip install poetry --upgrade pip

      - name: Install dependencies
        run: make install

      - name: Run tests and generate execution report
        run: make tests

      - name: Generate code coverage report
        run: make coverage-report

      - name: Save test execution report
        uses: actions/upload-artifact@v2
        with:
          name: test-execution-report
          path: report.html

      - name: Save code coverage report
        uses: actions/upload-artifact@v2
        with:
          name: code-coverage-report
          path: htmlcov/

  publish-testpypi:
    name: Publish to TestPyPI
    needs: test
    runs-on: ubuntu-latest

    steps:
      - name: Install poetry
        run: curl -sSL https://install.python-poetry.org | python -
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install setuptools wheel twine
      - name: Build and publish package
        env:
          TEST_PYPI_USERNAME: ${{ secrets.MY_PYTEST_USERNAME }}
          TEST_PYPI_PASSWORD: ${{ secrets.MY_PYTEST_PASSWORD }}
        run: |
          poetry config repositories
          poetry config repositories.testpypi https://test.pypi.org/legacy/
          poetry config pypi-token.testpypi $MY_PYTEST_USERNAME:$MY_PYTEST_PASSWORD
          rm -r dist/*
          poetry build
          poetry publish --repository testpypi

  build-and-publish-docker:
    name: Build and Publish Docker Image
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.MY_DOCKERHUB_USERNAME }}
          password: ${{ secrets.MY_DOCKERHUB_PASSWORD }}
      - name: Build and Push Docker Image
        run: |
          DOCKER_IMAGE="python:3.10-slim"
          TAG="${{ github.ref }}"
          docker buildx build --push --tag $DOCKER_IMAGE:$TAG .